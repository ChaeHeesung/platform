<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
    

    <!-- 검사 URL -->
    <http use-expressions="true" name="main">
        <intercept-url pattern="/loginSecurity" access="permitAll" />
        <intercept-url pattern="/home.do" access="permitAll" />
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/dream/**" access="hasRole('DREAM')" />
        <intercept-url pattern="/**" access="permitAll"  />
        
        
        <form-login login-page="/loginSecurity"
                    default-target-url="/"
                    authentication-failure-url="/loginSecurity?error"
                    username-parameter="user_sq"
                    password-parameter="user_pw"
                    />
        <logout logout-url="/logout"
                logout-success-url="/" />
        <access-denied-handler error-page="/loginDeny"/>
    </http>
    
    
    <beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>
    
    <!--  provider  -->
    <authentication-manager>
        <authentication-provider>
        <jdbc-user-service 
            data-source-ref="dataSource"
            role-prefix=""
            users-by-username-query="SELECT users.user_sq as username, users.user_pw as password, enabled, authority FROM users, authorities WHERE users.user_sq = authorities.user_sq and users.user_sq = ?"
            authorities-by-username-query="select user_sq as username, authority from authorities where user_sq = ?"
            group-authorities-by-username-query="select g.id, g.group_name, ga.authority from `groups` g, group_members gm, group_authorities ga where gm.user_sq = ? and g.id = ga.group_id and g.id = gm.group_id"
        />
        </authentication-provider>
   </authentication-manager>
</beans:beans>